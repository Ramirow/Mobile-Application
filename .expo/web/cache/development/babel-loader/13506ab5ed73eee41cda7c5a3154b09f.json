{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RadioButton = exports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _RadioButtonElements = require(\"./RadioButtonElements\");\n\nvar _theming = require(\"../../core/theming\");\n\nvar RadioButton = function RadioButton(props) {\n  var Button = _reactNative.Platform.select({\n    default: _RadioButtonElements.RadioButtonAndroid,\n    ios: _RadioButtonElements.RadioButtonIOS\n  });\n\n  return React.createElement(Button, props);\n};\n\nRadioButton.Group = _RadioButtonElements.RadioButtonGroup;\nRadioButton.Android = _RadioButtonElements.RadioButtonAndroid;\nRadioButton.IOS = _RadioButtonElements.RadioButtonIOS;\nRadioButton.Item = _RadioButtonElements.RadioButtonItem;\n\nvar _default = (0, _theming.withTheme)(RadioButton);\n\nexports.default = _default;\nvar RadioButtonWithTheme = (0, _theming.withTheme)(RadioButton);\nexports.RadioButton = RadioButtonWithTheme;","map":{"version":3,"sources":["RadioButton.tsx"],"names":["RadioButton","props","Button","default","ios","RadioButtonIOS","withTheme","RadioButtonWithTheme"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAMA;;AAuFA,IAAMA,WAAW,GAAIC,SAAfD,WAAeC,CAAAA,KAAD,EAAkB;AACpC,MAAMC,MAAM,GAAG,sBAAA,MAAA,CAAgB;AAC7BC,IAAAA,OAAO,EADsB,uCAAA;AAE7BC,IAAAA,GAAG,EAAEC;AAFwB,GAAhB,CAAf;;AAKA,SAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAP,KAAO,CAAP;AANF,CAAA;;AAUAL,WAAW,CAAXA,KAAAA,GAAAA,qCAAAA;AAGAA,WAAW,CAAXA,OAAAA,GAAAA,uCAAAA;AAGAA,WAAW,CAAXA,GAAAA,GAAAA,mCAAAA;AAGAA,WAAW,CAAXA,IAAAA,GAAAA,oCAAAA;;eAEeM,wBAAf,WAAeA,C;;;AAGf,IAAMC,oBAAoB,GAAGD,wBAA7B,WAA6BA,CAA7B","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport {\n  RadioButtonAndroid,\n  RadioButtonGroup,\n  RadioButtonIOS,\n  RadioButtonItem,\n} from './RadioButtonElements';\nimport { withTheme } from '../../core/theming';\n\nexport type Props = {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState('first');\n *\n *   return (\n *     <View>\n *       <RadioButton\n *         value=\"first\"\n *         status={ checked === 'first' ? 'checked' : 'unchecked' }\n *         onPress={() => setChecked('first')}\n *       />\n *       <RadioButton\n *         value=\"second\"\n *         status={ checked === 'second' ? 'checked' : 'unchecked' }\n *         onPress={() => setChecked('second')}\n *       />\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst RadioButton = (props: Props) => {\n  const Button = Platform.select({\n    default: RadioButtonAndroid,\n    ios: RadioButtonIOS,\n  });\n\n  return <Button {...props} />;\n};\n\n// @component ./RadioButtonGroup.tsx\nRadioButton.Group = RadioButtonGroup;\n\n// @component ./RadioButtonAndroid.tsx\nRadioButton.Android = RadioButtonAndroid;\n\n// @component ./RadioButtonIOS.tsx\nRadioButton.IOS = RadioButtonIOS;\n\n// @component ./RadioButtonItem.tsx\nRadioButton.Item = RadioButtonItem;\n\nexport default withTheme(RadioButton);\n\n// @component-docs ignore-next-line\nconst RadioButtonWithTheme = withTheme(RadioButton);\n// @component-docs ignore-next-line\nexport { RadioButtonWithTheme as RadioButton };\n"]},"metadata":{},"sourceType":"script"}