{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fitCenterRect = fitCenterRect;\nexports.transformedRect = transformedRect;\nexports.getTransform = getTransform;\nexports.alignedRect = alignedRect;\nexports.availableTranslateSpace = availableTranslateSpace;\nObject.defineProperty(exports, \"Rect\", {\n  enumerable: true,\n  get: function get() {\n    return _Rect.default;\n  }\n});\nexports.Transform = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _Rect = _interopRequireDefault(require(\"./Rect\"));\n\nvar Transform = function Transform(scale, translateX, translateY, pivot) {\n  (0, _classCallCheck2.default)(this, Transform);\n  this.scale = scale;\n  this.translateX = translateX;\n  this.translateY = translateY;\n  this.pivot = pivot;\n};\n\nexports.Transform = Transform;\n\nfunction isValidNumber(number) {\n  if (typeof number === 'number') {\n    if (!isNaN(number)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isValidRect(rect) {\n  if (rect instanceof _Rect.default && rect.isValid()) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isValidTransform(transform) {\n  if (transform && isValidNumber(transform.scale) && isValidNumber(transform.translateX) && isValidNumber(transform.translateY)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction fitCenterRect(contentAspectRatio, containerRect) {\n  var w = containerRect.width();\n  var h = containerRect.height();\n  var viewAspectRatio = w / h;\n\n  if (contentAspectRatio > viewAspectRatio) {\n    h = w / contentAspectRatio;\n  } else {\n    w = h * contentAspectRatio;\n  }\n\n  return new _Rect.default(containerRect.centerX() - w / 2, containerRect.centerY() - h / 2, containerRect.centerX() + w / 2, containerRect.centerY() + h / 2);\n}\n\nfunction transformedRect(rect, transform) {\n  if (!isValidRect(rect)) {\n    throw new Error('transformedRect...invalid rect');\n  }\n\n  if (!isValidTransform(transform)) {\n    throw new Error('transformedRect...invalid transform');\n  }\n\n  var scale = transform.scale;\n  var translateX = transform.translateX;\n  var translateY = transform.translateY;\n  var pivot = transform.pivot;\n\n  if (pivot === undefined || pivot === null) {\n    var width = rect.width() * scale;\n    var height = rect.height() * scale;\n    var centerX = rect.centerX() + translateX * scale;\n    var centerY = rect.centerY() + translateY * scale;\n    return new _Rect.default(centerX - width / 2, centerY - height / 2, centerX + width / 2, centerY + height / 2);\n  } else {\n    var pivotX = pivot.x;\n    var pivotY = pivot.y;\n\n    if (!isValidNumber(pivotX) || !isValidNumber(pivotY)) {\n      throw new Error('transformedRect...invalid pivot x=' + pivot.x + ', y=' + pivot.y);\n    }\n\n    var resultRect = transformedRect(rect, {\n      scale: scale,\n      translateX: translateX,\n      translateY: translateY\n    });\n    var dx = (scale - 1) * (pivotX - resultRect.centerX());\n    var dy = (scale - 1) * (pivotY - resultRect.centerY());\n    return resultRect.offset(-dx, -dy);\n  }\n}\n\nfunction getTransform(fromRect, toRect) {\n  var scale = toRect.width() / fromRect.width();\n  var translateX = (toRect.centerX() - fromRect.centerX()) / scale;\n  var translateY = (toRect.centerY() - fromRect.centerY()) / scale;\n  return new Transform(scale, translateX, translateY);\n}\n\nfunction alignedRect(rect, viewPortRect) {\n  var dx = 0,\n      dy = 0;\n\n  if (rect.width() > viewPortRect.width()) {\n    if (rect.left > viewPortRect.left) {\n      dx = viewPortRect.left - rect.left;\n    } else if (rect.right < viewPortRect.right) {\n      dx = viewPortRect.right - rect.right;\n    }\n  } else {\n    dx = viewPortRect.centerX() - rect.centerX();\n  }\n\n  if (rect.height() > viewPortRect.height()) {\n    if (rect.top > viewPortRect.top) {\n      dy = viewPortRect.top - rect.top;\n    } else if (rect.bottom < viewPortRect.bottom) {\n      dy = viewPortRect.bottom - rect.bottom;\n    }\n  } else {\n    dy = viewPortRect.centerY() - rect.centerY();\n  }\n\n  return rect.copy().offset(dx, dy);\n}\n\nfunction availableTranslateSpace(rect, viewPortRect) {\n  return {\n    left: viewPortRect.left - rect.left,\n    right: rect.right - viewPortRect.right,\n    top: viewPortRect.top - rect.top,\n    bottom: rect.bottom - viewPortRect.bottom\n  };\n}","map":{"version":3,"sources":["/Users/accedo/Desktop/albums/node_modules/react-native-view-transformer/library/transform/TransformUtils.js"],"names":["Transform","scale","translateX","translateY","pivot","isValidNumber","number","isNaN","isValidRect","rect","Rect","isValid","isValidTransform","transform","fitCenterRect","contentAspectRatio","containerRect","w","width","h","height","viewAspectRatio","centerX","centerY","transformedRect","Error","undefined","pivotX","x","pivotY","y","resultRect","dx","dy","offset","getTransform","fromRect","toRect","alignedRect","viewPortRect","left","right","top","bottom","copy","availableTranslateSpace"],"mappings":"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","sourcesContent":["'use strict';\n\nimport Rect from './Rect';\n\nexport {Rect};\n\nexport class Transform {\n  constructor(scale, translateX, translateY, pivot) {\n    this.scale = scale;\n    this.translateX = translateX;\n    this.translateY = translateY;\n    this.pivot = pivot;\n  }\n}\n\nfunction isValidNumber(number) {\n  if (typeof number === 'number') {\n    if (!isNaN(number)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isValidRect(rect) {\n  if (rect instanceof Rect && rect.isValid()) {\n    return true;\n  }\n  return false;\n}\n\nfunction isValidTransform(transform) {\n  if (transform && isValidNumber(transform.scale) && isValidNumber(transform.translateX) && isValidNumber(transform.translateY)) {\n    return true;\n  }\n  return false;\n}\n\nexport function fitCenterRect(contentAspectRatio, containerRect:Rect) {\n  let w = containerRect.width();\n  let h = containerRect.height();\n  let viewAspectRatio = w / h;\n\n  if (contentAspectRatio > viewAspectRatio) {\n    h = w / contentAspectRatio;\n  } else {\n    w = h * contentAspectRatio;\n  }\n\n  return new Rect(\n    containerRect.centerX() - w / 2,\n    containerRect.centerY() - h / 2,\n    containerRect.centerX() + w / 2,\n    containerRect.centerY() + h / 2\n  );\n}\n\n\n/**\n * The React Native transform system use the center of the view as the pivot when scaling.\n * The translations are applied before scaling.\n * @param rect\n * @param transform\n * @returns {*}\n */\nexport function transformedRect(rect:Rect, transform:Transform) {\n  if (!isValidRect(rect)) {\n    throw new Error('transformedRect...invalid rect');\n  }\n  if (!isValidTransform(transform)) {\n    throw new Error('transformedRect...invalid transform');\n  }\n\n  let scale = transform.scale;\n  let translateX = transform.translateX;\n  let translateY = transform.translateY;\n\n  let pivot = transform.pivot;\n  if (pivot === undefined || pivot === null) {\n    let width = rect.width() * scale;\n    let height = rect.height() * scale;\n    let centerX = rect.centerX() + translateX * scale;\n    let centerY = rect.centerY() + translateY * scale;\n\n    return new Rect(\n      centerX - width / 2,\n      centerY - height / 2,\n      centerX + width / 2,\n      centerY + height / 2\n    );\n  } else {\n    let pivotX = pivot.x;\n    let pivotY = pivot.y;\n    if (!isValidNumber(pivotX) || !isValidNumber(pivotY)) {\n      throw new Error('transformedRect...invalid pivot x=' + pivot.x + ', y=' + pivot.y);\n    }\n\n    //first make the center still\n    let resultRect = transformedRect(rect, {\n      scale, translateX, translateY\n    });\n\n    //the pivot moved during scaling, now move it back\n    let dx = (scale - 1) * (pivotX - resultRect.centerX());\n    let dy = (scale - 1) * (pivotY - resultRect.centerY());\n    return resultRect.offset(-dx, -dy);\n  }\n}\n\n/**\n * Calculate the transform from fromRect to toRect\n * @param fromRect\n * @param toRect\n * @returns {Transform}\n */\nexport function getTransform(fromRect, toRect) {\n  let scale = toRect.width() / fromRect.width();\n  let translateX = (toRect.centerX() - fromRect.centerX()) / scale;\n  let translateY = (toRect.centerY() - fromRect.centerY()) / scale;\n\n  return new Transform(scale, translateX, translateY);\n}\n\n/**\n * Align edges of the rect with the viewport to avoid unnecessary blank space. NO scaling is performed here.\n * @param rect\n * @param viewPortRect\n * @returns {*|{line, column}|{column, line}|{x}}\n */\nexport function alignedRect(rect:Rect, viewPortRect:Rect) {\n  let dx = 0, dy = 0;\n\n  if (rect.width() > viewPortRect.width()) {\n    if (rect.left > viewPortRect.left) {\n      dx = viewPortRect.left - rect.left;\n    } else if (rect.right < viewPortRect.right) {\n      dx = viewPortRect.right - rect.right;\n    }\n  } else {\n    dx = viewPortRect.centerX() - rect.centerX();\n  }\n\n  if (rect.height() > viewPortRect.height()) {\n    if (rect.top > viewPortRect.top) {\n      dy = viewPortRect.top - rect.top;\n    } else if (rect.bottom < viewPortRect.bottom) {\n      dy = viewPortRect.bottom - rect.bottom;\n    }\n  } else {\n    dy = viewPortRect.centerY() - rect.centerY();\n  }\n\n  return rect.copy().offset(dx, dy);\n}\n\nexport function availableTranslateSpace(rect, viewPortRect) {\n  return {\n    left: viewPortRect.left - rect.left,\n    right: rect.right - viewPortRect.right,\n    top: viewPortRect.top - rect.top,\n    bottom: rect.bottom - viewPortRect.bottom\n  };\n}"]},"metadata":{},"sourceType":"script"}