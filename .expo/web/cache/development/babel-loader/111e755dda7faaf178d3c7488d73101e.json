{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar Rect = function () {\n  function Rect(left, top, right, bottom) {\n    (0, _classCallCheck2.default)(this, Rect);\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  (0, _createClass2.default)(Rect, [{\n    key: \"set\",\n    value: function set(left, top, right, bottom) {\n      this.left = left;\n      this.top = top;\n      this.right = right;\n      this.bottom = bottom;\n    }\n  }, {\n    key: \"width\",\n    value: function width() {\n      return this.right - this.left;\n    }\n  }, {\n    key: \"height\",\n    value: function height() {\n      return this.bottom - this.top;\n    }\n  }, {\n    key: \"centerX\",\n    value: function centerX() {\n      return (this.left + this.right) / 2;\n    }\n  }, {\n    key: \"centerY\",\n    value: function centerY() {\n      return (this.top + this.bottom) / 2;\n    }\n  }, {\n    key: \"offset\",\n    value: function offset(dx, dy) {\n      this.left += dx;\n      this.right += dx;\n      this.top += dy;\n      this.bottom += dy;\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return new Rect(this.left, this.top, this.right, this.bottom);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(rect) {\n      return this.left === rect.left && this.top === rect.top && this.right === rect.right && this.bottom && rect.bottom;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      if (typeof this.left === 'number' && typeof this.right === 'number' && typeof this.top === 'number' && typeof this.bottom === 'number') {\n        return true;\n      }\n\n      return false;\n    }\n  }]);\n  return Rect;\n}();\n\nexports.default = Rect;","map":{"version":3,"sources":["/Users/accedo/Desktop/albums/node_modules/react-native-view-transformer/library/transform/Rect.js"],"names":["Rect","left","top","right","bottom","dx","dy","rect"],"mappings":"AAAA;;;;;;;;;;;;;IAEqBA,I;AAEnB,gBAAYC,IAAZ,EAAkBC,GAAlB,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AAAA;AACpC,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACD;;;;wBAEGH,I,EAAMC,G,EAAKC,K,EAAOC,M,EAAQ;AAC5B,WAAKH,IAAL,GAAYA,IAAZ;AACA,WAAKC,GAAL,GAAWA,GAAX;AACA,WAAKC,KAAL,GAAaA,KAAb;AACA,WAAKC,MAAL,GAAcA,MAAd;AACD;;;4BAEO;AACN,aAAO,KAAKD,KAAL,GAAa,KAAKF,IAAzB;AACD;;;6BAEQ;AACP,aAAO,KAAKG,MAAL,GAAc,KAAKF,GAA1B;AACD;;;8BAES;AACR,aAAO,CAAC,KAAKD,IAAL,GAAY,KAAKE,KAAlB,IAA2B,CAAlC;AACD;;;8BAES;AACR,aAAO,CAAC,KAAKD,GAAL,GAAW,KAAKE,MAAjB,IAA2B,CAAlC;AACD;;;2BAEMC,E,EAAIC,E,EAAI;AACb,WAAKL,IAAL,IAAaI,EAAb;AACA,WAAKF,KAAL,IAAcE,EAAd;AACA,WAAKH,GAAL,IAAYI,EAAZ;AACA,WAAKF,MAAL,IAAeE,EAAf;AACA,aAAO,IAAP;AACD;;;2BAEM;AACL,aAAO,IAAIN,IAAJ,CAAS,KAAKC,IAAd,EAAoB,KAAKC,GAAzB,EAA8B,KAAKC,KAAnC,EAA0C,KAAKC,MAA/C,CAAP;AACD;;;2BAGMG,I,EAAW;AAChB,aAAO,KAAKN,IAAL,KAAcM,IAAI,CAACN,IAAnB,IAA2B,KAAKC,GAAL,KAAaK,IAAI,CAACL,GAA7C,IAAoD,KAAKC,KAAL,KAAeI,IAAI,CAACJ,KAAxE,IAAiF,KAAKC,MAAtF,IAAgGG,IAAI,CAACH,MAA5G;AACD;;;8BAES;AACR,UAAI,OAAO,KAAKH,IAAZ,KAAqB,QAArB,IACC,OAAO,KAAKE,KAAZ,KAAsB,QADvB,IAEC,OAAO,KAAKD,GAAZ,KAAoB,QAFrB,IAGC,OAAO,KAAKE,MAAZ,KAAuB,QAH5B,EAGsC;AACpC,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD","sourcesContent":["'use strict';\n\nexport default class Rect {\n\n  constructor(left, top, right, bottom) {\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  set(left, top, right, bottom) {\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  width() {\n    return this.right - this.left;\n  }\n\n  height() {\n    return this.bottom - this.top;\n  }\n\n  centerX() {\n    return (this.left + this.right) / 2;\n  }\n\n  centerY() {\n    return (this.top + this.bottom) / 2;\n  }\n\n  offset(dx, dy) {\n    this.left += dx;\n    this.right += dx;\n    this.top += dy;\n    this.bottom += dy;\n    return this;\n  }\n\n  copy() {\n    return new Rect(this.left, this.top, this.right, this.bottom);\n  }\n\n\n  equals(rect:Rect) {\n    return this.left === rect.left && this.top === rect.top && this.right === rect.right && this.bottom && rect.bottom;\n  }\n\n  isValid() {\n    if (typeof this.left === 'number'\n      && typeof this.right === 'number'\n      && typeof this.top === 'number'\n      && typeof this.bottom === 'number') {\n      return true;\n    }\n    return false;\n  }\n}"]},"metadata":{},"sourceType":"script"}